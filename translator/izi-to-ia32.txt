Izi
ADD OP
ACC <- ACC + MEM[OP]

IA32
mov eax, [ACC]
add eax, [OP]
mov [ACC], eax
-----------------------

Izi
SUB OP
ACC <- ACC - MEM[OP]

IA32
mov eax, [ACC]
sub eax, [OP]
mov [ACC], eax
-----------------------

Izi
MULT OP
ACC <- ACC * MEM[OP]

IA32
mov eax, [ACC]
mov edx, [OP]
imul edx
mov [ACC], eax
-----------------------

Izi
DIV OP
ACC <- ACC / MEM[OP]

IA32
mov eax, [ACC]
cdq
mov ecx, [OP]
idiv ecx
mov [ACC], eax
-----------------------

Izi
JMP OP
PC <- OP

IA32
jmp [OP]
-----------------------

Izi
JMPN
If ACC < 0, PC <- OP

IA32
mov eax, [ACC]
comp eax, 0
jl OP
-----------------------

Izi
JMPP
If ACC > 0, PC <- OP

IA32
mov eax, [ACC]
comp eax, 0
jg OP

-----------------------

Izi
JMPZ
If ACC == 0, PC <- OP

IA32
mov eax, [ACC]
comp eax, 0
je OP

-----------------------
